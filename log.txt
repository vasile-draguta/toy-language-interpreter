ID: 11
Execution Stack: Integer v Ref(Integer) a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))); print(v); print(HeapReading(a)) 
Symbol Table: 
Output: 
File Table: {}
Heap Table: 
-------------------

ID: 11
Execution Stack: Ref(Integer) a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))); print(v); print(HeapReading(a)) 
Symbol Table: v -> 0
Output: 
File Table: {}
Heap Table: 
-------------------

ID: 11
Execution Stack: Ref(Integer) a v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))); print(v); print(HeapReading(a)) 
Symbol Table: v -> 0
Output: 
File Table: {}
Heap Table: 
-------------------

ID: 11
Execution Stack: v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))); print(v); print(HeapReading(a)) 
Symbol Table: a -> (0, Integer), v -> 0
Output: 
File Table: {}
Heap Table: 
-------------------

ID: 11
Execution Stack: v = 10 new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))); print(v); print(HeapReading(a)) 
Symbol Table: a -> (0, Integer), v -> 0
Output: 
File Table: {}
Heap Table: 
-------------------

ID: 11
Execution Stack: new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))); print(v); print(HeapReading(a)) 
Symbol Table: a -> (0, Integer), v -> 10
Output: 
File Table: {}
Heap Table: 
-------------------

ID: 11
Execution Stack: new(a, 22) fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))); print(v); print(HeapReading(a)) 
Symbol Table: a -> (0, Integer), v -> 10
Output: 
File Table: {}
Heap Table: 
-------------------

ID: 11
Execution Stack: fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))); print(v); print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 
File Table: {}
Heap Table: 1 -> 22
-------------------

ID: 11
Execution Stack: fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))) print(v); print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 
File Table: {}
Heap Table: 1 -> 22
-------------------

ID: 11
Execution Stack: print(v); print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 
File Table: {}
Heap Table: 1 -> 22
-------------------

ID: 12
Execution Stack: WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 
File Table: {}
Heap Table: 1 -> 22
-------------------

ID: 11
Execution Stack: print(v) print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 
File Table: {}
Heap Table: 1 -> 22
-------------------

ID: 12
Execution Stack: WriteHeap(a, 30) v = 32; print(v); print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 
File Table: {}
Heap Table: 1 -> 22
-------------------

ID: 11
Execution Stack: print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 10
File Table: {}
Heap Table: 1 -> 30
-------------------

ID: 12
Execution Stack: v = 32; print(v); print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 10
File Table: {}
Heap Table: 1 -> 30
-------------------

ID: 11
Execution Stack: 
Symbol Table: a -> (1, Integer), v -> 10
Output: 10, 30
File Table: {}
Heap Table: 1 -> 30
-------------------

ID: 12
Execution Stack: v = 32 print(v); print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 10, 30
File Table: {}
Heap Table: 1 -> 30
-------------------

ID: 12
Execution Stack: print(v); print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 32
Output: 10, 30
File Table: {}
Heap Table: 1 -> 30
-------------------

ID: 12
Execution Stack: print(v) print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 32
Output: 10, 30
File Table: {}
Heap Table: 1 -> 30
-------------------

ID: 12
Execution Stack: print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 32
Output: 10, 30, 32
File Table: {}
Heap Table: 1 -> 30
-------------------

ID: 12
Execution Stack: 
Symbol Table: a -> (1, Integer), v -> 32
Output: 10, 30, 32, 30
File Table: {}
Heap Table: 1 -> 30
-------------------

ID: 11
Execution Stack: Integer v Ref(Integer) a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))); print(v); print(HeapReading(a)) 
Symbol Table: 
Output: 
File Table: {}
Heap Table: 
-------------------

ID: 11
Execution Stack: Ref(Integer) a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))); print(v); print(HeapReading(a)) 
Symbol Table: v -> 0
Output: 
File Table: {}
Heap Table: 
-------------------

ID: 11
Execution Stack: Ref(Integer) a v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))); print(v); print(HeapReading(a)) 
Symbol Table: v -> 0
Output: 
File Table: {}
Heap Table: 
-------------------

ID: 11
Execution Stack: v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))); print(v); print(HeapReading(a)) 
Symbol Table: a -> (0, Integer), v -> 0
Output: 
File Table: {}
Heap Table: 
-------------------

ID: 11
Execution Stack: v = 10 new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))); print(v); print(HeapReading(a)) 
Symbol Table: a -> (0, Integer), v -> 0
Output: 
File Table: {}
Heap Table: 
-------------------

ID: 11
Execution Stack: new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))); print(v); print(HeapReading(a)) 
Symbol Table: a -> (0, Integer), v -> 10
Output: 
File Table: {}
Heap Table: 
-------------------

ID: 11
Execution Stack: new(a, 22) fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))); print(v); print(HeapReading(a)) 
Symbol Table: a -> (0, Integer), v -> 10
Output: 
File Table: {}
Heap Table: 
-------------------

ID: 11
Execution Stack: fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))); print(v); print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 
File Table: {}
Heap Table: 1 -> 22
-------------------

ID: 11
Execution Stack: fork(WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a))) print(v); print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 
File Table: {}
Heap Table: 1 -> 22
-------------------

ID: 11
Execution Stack: print(v); print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 
File Table: {}
Heap Table: 1 -> 22
-------------------

ID: 12
Execution Stack: WriteHeap(a, 30); v = 32; print(v); print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 
File Table: {}
Heap Table: 1 -> 22
-------------------

ID: 11
Execution Stack: print(v) print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 
File Table: {}
Heap Table: 1 -> 22
-------------------

ID: 12
Execution Stack: WriteHeap(a, 30) v = 32; print(v); print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 
File Table: {}
Heap Table: 1 -> 22
-------------------

ID: 11
Execution Stack: print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 10
File Table: {}
Heap Table: 1 -> 30
-------------------

ID: 12
Execution Stack: v = 32; print(v); print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 10
File Table: {}
Heap Table: 1 -> 30
-------------------

ID: 11
Execution Stack: 
Symbol Table: a -> (1, Integer), v -> 10
Output: 10, 30
File Table: {}
Heap Table: 1 -> 30
-------------------

ID: 12
Execution Stack: v = 32 print(v); print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 10
Output: 10, 30
File Table: {}
Heap Table: 1 -> 30
-------------------

ID: 12
Execution Stack: print(v); print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 32
Output: 10, 30
File Table: {}
Heap Table: 1 -> 30
-------------------

ID: 12
Execution Stack: print(v) print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 32
Output: 10, 30
File Table: {}
Heap Table: 1 -> 30
-------------------

ID: 12
Execution Stack: print(HeapReading(a)) 
Symbol Table: a -> (1, Integer), v -> 32
Output: 10, 30, 32
File Table: {}
Heap Table: 1 -> 30
-------------------

ID: 12
Execution Stack: 
Symbol Table: a -> (1, Integer), v -> 32
Output: 10, 30, 32, 30
File Table: {}
Heap Table: 1 -> 30
-------------------

